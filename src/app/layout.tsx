'use client';

import type {Metadata} from 'next';
import {Geist, Geist_Mono} from 'next/font/google';
import './globals.css';
import {Toaster} from '@/components/ui/toaster';
import {Login} from '@/components/auth/login';
import {useState, useEffect} from 'react';
import {SidebarLayout} from '@/components/layout/sidebar-layout';
import {ThemeProvider} from '@/components/theme/theme-provider';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

// export const metadata: Metadata = {
//   title: 'Nebula Task Manager',
//   description: 'Generated by Firebase Studio',
// };


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  useEffect(() => {
    // Simulate authentication check (replace with actual authentication logic)
    const token = localStorage.getItem('token');
    if (token) {
      setIsAuthenticated(true);
    } else {
      setIsAuthenticated(false);
    }
  }, []);

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
          <Toaster />
          {isAuthenticated ? (
            <SidebarLayout>{children}</SidebarLayout>
          ) : (
            <Login onLogin={() => setIsAuthenticated(true)} />
          )}
        </ThemeProvider>
      </body>
    </html>
  );
}

